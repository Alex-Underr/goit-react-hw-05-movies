{"version":3,"file":"static/js/947.1b5fa2b2.chunk.js","mappings":"6OAIe,SAASA,IAAgB,IAAD,QAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBR,GACfS,MAAK,SAAAC,GACJJ,EAAQI,EACT,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACb,KAGF,0BACO,OAAJK,QAAI,IAAJA,OAAA,EAAAA,EAAMS,MACL,iCACE,0BACE,SAAC,KAAD,CAAMC,GAAE,iBAAEb,QAAF,IAAEA,GAAF,UAAEA,EAAUc,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,qBAEF,iCACE,gBACEC,IAAG,0CAAqCb,EAAKc,aAC7CC,IAAKf,EAAKgB,MACVC,MAAM,SAER,4BACE,wBAAKjB,EAAKgB,SACV,yCACc,0BAAOhB,EAAKkB,aAAaC,QAAQ,SAE/C,qCACA,uBAAInB,EAAKoB,YACT,mCACA,uBAAIpB,EAAKqB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,iBAIxB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAOC,MAAO,CAAEC,KAAI,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUc,aAAZ,aAAE,EAAiBC,MAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUc,aAAZ,aAAE,EAAiBC,MAAnD,8BAMN,SAAC,EAAAY,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,UAMX,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from 'components/services/API';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  // const locationBack = useRef(location.state);\n  const [film, setFilm] = useState({});\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(data => {\n        setFilm(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  return (\n    <div>\n      {film?.id && (\n        <>\n          <div>\n            <Link to={location?.state?.from ?? '/'}>BACK</Link>\n          </div>\n          <>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n              alt={film.title}\n              width=\"300\"\n            />\n            <div>\n              <h2>{film.title}</h2>\n              <p>\n                User score: <span>{film.vote_average.toFixed(2)}</span>\n              </p>\n              <b>Overview</b>\n              <p>{film.overview}</p>\n              <b>Genres</b>\n              <p>{film.genres.map(({ name }) => `${name} `)}</p>\n            </div>\n          </>\n\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from: location?.state?.from }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["MovieDetails","movieId","useParams","location","useLocation","useState","film","setFilm","useEffect","fetchMovieDetails","then","data","catch","console","log","id","to","state","from","src","poster_path","alt","title","width","vote_average","toFixed","overview","genres","map","name","Suspense","fallback"],"sourceRoot":""}
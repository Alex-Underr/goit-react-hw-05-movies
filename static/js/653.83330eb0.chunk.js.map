{"version":3,"file":"static/js/653.83330eb0.chunk.js","mappings":"oOACA,EAAyB,uBAAzB,EAAwD,sBAAxD,EAAqF,qBAArF,EAAoH,wB,SCKrG,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAcJ,EAAaK,IAAI,SAErCC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAYH,GAAaI,KAAKZ,EAC/B,GAAE,CAACQ,IASJ,OACE,iCACE,kBAAMK,SATW,SAAAC,GACnBA,EAAEC,iBAEFV,EAAgBJ,EAAQ,CAAEe,KAAMf,GAAU,CAAC,GAC3Ca,EAAEG,OAAOC,OACV,EAIiCC,UAAWC,EAAzC,WACE,kBACED,UAAWC,EACXC,KAAK,OAELC,YAAY,gBACZC,UAAQ,EACRC,WAAS,EACTvB,MAAOA,EACPwB,SAAU,SAAAX,GACRZ,EAASY,EAAEG,OAAOhB,MAAMyB,cACzB,KAEH,mBAAQL,KAAK,SAASF,UAAWC,EAAjC,uBAIDrB,IACC,eAAIoB,UAAWC,EAAf,SACGrB,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM3B,GAAlC,WACE,gBACE4B,IAAG,0CAAqCJ,GACxCK,IAAKN,EACLO,MAAM,QAEPP,MAPID,EADC,QAgBrB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Movies_Button__3DjKZ\",\"input\":\"Movies_input__OE3ef\",\"form\":\"Movies_form__mp42q\",\"preview\":\"Movies_preview__vbY0X\"};","import { searchFilms } from '../services/API';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './Movies.module.css';\n\nexport default function Movies() {\n  const [events, setEvents] = useState([]);\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('name');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    searchFilms(searchQuery).then(setEvents);\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const value = e.target.elements.param.value;\n    setSearchParams(value ? { name: value } : {});\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={style.form}>\n        <input\n          className={style.input}\n          type=\"text\"\n          // name=\"value\"\n          placeholder=\"Search movies\"\n          required\n          autoFocus\n          value={value}\n          onChange={e => {\n            setValue(e.target.value.toLowerCase());\n          }}\n        />\n        <button type=\"submit\" className={style.Button}>\n          Search\n        </button>\n      </form>\n      {events && (\n        <ul className={style.preview}>\n          {events.map(({ id, title, poster_path }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={title}\n                  width=\"300\"\n                />\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["Movies","useState","events","setEvents","value","setValue","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","searchFilms","then","onSubmit","e","preventDefault","name","target","reset","className","style","type","placeholder","required","autoFocus","onChange","toLowerCase","map","id","title","poster_path","to","state","from","src","alt","width"],"sourceRoot":""}